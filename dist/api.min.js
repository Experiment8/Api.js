/**
ROBERTO LONARDI - 2016
Api.js Async comunication Library.
API - Javascript Api calls module.

Required libraries for correct working:
- jQuery > 1.2.0
*/
function api(){function e(e){var n=e.url+JSON.stringify(e.params);return md5?md5(n):n}function n(n){var o=e(n);return c.cache[o]}function o(n,o){var t=e(n);c.config.dev&&console.info(c.config.info.name+': Saving call in cache with key "'+t+'"'),c.cache[t]=o}function t(e){e.contentType||(e.contentType=c.config.settings.contentType);var n={};return n.url=e.url,n.method=e.method,n.accept=e.accept,n.contentType=e.contentType,e.body&&(n.data=e.body),e.headers&&(n.headers=e.headers),e.settings&&$.extend(n,e.settings),n}function r(e){var n=t(e),o=new Promise(function(e,o){$.ajax(n).done(function(n,o,t){e(n,o,t)}).fail(function(e,n,t){o(e,n,t)})});return o}function i(e){if(e.params)for(key in e.params)if(Help.checkPlaceholder(key,e.url)){var t=Help.placeholder(key);e.url=e.url.replace(t,e.params[key]),delete e.params[key]}if(e.params&&(e.url+=Help.toQueryString(e.params),delete e.params),url.indexOf("http")<0&&(url=c.config.paths.api+url),c.config.settings.cache.enabled&&n(e)){var i=new Promise(function(o){o(n(e))}),s=r(e);return s.then(function(n){o(e,n)}),i}var s=r(e);return s.then(function(n){o(e,n)}),s}function s(e){if(!e)return!1;e instanceof Array||(e=[e]);for(index in e){var n=e[index];if(!n.url)return console.error(c.config.info.name+": No url passed, request aborted."),!1}return e}function a(){var e=c.config.ext,n=[];if(0===e.length)return Help.fakePromise(!0);for(index in e){var o=e[index],t=new Promise(function(e,n){$.getScript(o,function(n){e(n)}).fail(function(){n()})});n.push(t)}return Promise.all(n)}var c={config:{paths:{base:"",api:""},dev:!0,ext:["ext/helpers.js","ext/md5.js"],info:{name:"Api"},methods:{get:"GET",post:"POST",put:"PUT","delete":"DELETE"},settings:{contentType:"application/json",accept:"json",cache:{enabled:!0}}},cache:{},build:{Request:function(e,n){return e?(e.indexOf("http")<0&&(e=c.config.paths.api+e),this.url=e,void(n&&(this.params=n))):(console.error(c.config.info.name+": At least url must be passed to create Request object."),!1)}},init:function(e,n){$.extend(!0,c.config,e),a().then(function(){n&&n()})},get:function(e,n,o){if(e=s(e),!e)return console.error(c.config.info.name+": No valid requests passes on GET method, aborted."),!1;var t=[];for(index in e){var r=e[index];if(r.method&&r.method!==c.config.methods.get)console.error(c.config.info.name+": Passed method different from GET, request skipped.",r);else{r.method=c.config.methods.get;var a=i(r);t.push(a)}}var f=new Promise(function(e,r){Promise.all(t).then(function(o,t,r){n&&n(o,t,r),e(o,t,r)})["catch"](function(e,n,t){o&&o(e,n,t),r(e,n,t)})});return f},post:function(e,n,o){if(e=s(e),!e)return console.error(c.config.info.name+": No valid requests passes on POST method, aborted."),!1;var t=[];for(index in e){var r=e[index];if(r.method&&r.method!==c.config.methods.post)console.error(c.config.info.name+": Passed method different from POST, request skipped.",r);else{r.method=c.config.methods.post;var a=i(r);t.push(a)}}return Promise.all(t).then(function(e,o,t){n&&n(e,o,t)})["catch"](function(e,n,t){o&&o(e,n,t)})},put:function(e,n,o){if(e=s(e),!e)return console.error(c.config.info.name+": No valid requests passes on PUT method, aborted."),!1;var t=[];for(index in e){var r=e[index];if(r.method&&r.method!==c.config.methods.put)console.error(c.config.info.name+": Passed method different from PUT, request skipped.",r);else{r.method=c.config.methods.put;var a=i(r);t.push(a)}}return Promise.all(t).then(function(e,o,t){n&&n(e,o,t)})["catch"](function(e,n,t){o&&o(e,n,t)})},"delete":function(e,n,o){if(e=s(e),!e)return console.error(c.config.info.name+": No valid requests passes on DELETE method, aborted."),!1;var t=[];for(index in e){var r=e[index];if(r.method&&r.method!==c.config.methods["delete"])console.error(c.config.info.name+": Passed method different from DELETE, request skipped.",r);else{r.method=c.config.methods["delete"];var a=i(r);t.push(a)}}return Promise.all(t).then(function(e,o,t){n&&n(e,o,t)})["catch"](function(e,n,t){o&&o(e,n,t)})},call:function(e,n,o){if(e=s(e),!e)return console.error(c.config.info.name+": No valid requests passes on CALL method, aborted."),!1;var t=[];for(index in e){var r=e[index];if(r.method){var a=i(r);t.push(a)}else console.error(c.config.info.name+": No method found, request skipped.",r)}return Promise.all(t).then(function(e,o,t){n&&n(e,o,t)})["catch"](function(e,n,t){o&&o(e,n,t)})}};return c}
